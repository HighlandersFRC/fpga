/*
 * Empty C++ Application
 */

#include "xgpio.h"
#include "xil_printf.h"
#include "xscutimer.h"
#include "xparameters.h"
#include "unistd.h"
#include "Oled.h"

XGpio Gpio;

/*
 * Simple delay function
 */
void delay(int time) {
	for (int i = 0; i < time * 50000; i++) {
	}
}

XScuTimer *timer(u32 seconds) {
	XScuTimer *timer = new XScuTimer();
	XScuTimer_Config *timer_config = XScuTimer_LookupConfig(XPAR_XSCUTIMER_0_DEVICE_ID);
	XScuTimer_CfgInitialize(timer, timer_config, timer_config->BaseAddr);
	XScuTimer_Stop(timer);
	XScuTimer_LoadTimer(timer, XPAR_CPU_CORTEXA9_0_CPU_CLK_FREQ_HZ * seconds);
	XScuTimer_Start(timer);
	while (true) {
		if (XScuTimer_GetCounterValue(timer) == 0) {
			XScuTimer_Stop(timer);
			XScuTimer_LoadTimer(timer, XPAR_CPU_CORTEXA9_0_CPU_CLK_FREQ_HZ * seconds / 2);
			XScuTimer_Start(timer);
			print("Trigger");
		}
	}
	print("Done");
	return timer;
}

Oled *oled;

int main() {
//	oled = new Oled();
//	u8 temp = 0;
//	while (1) {
//		for (int i = 0; i < 64 * 16; i++) {
//			oled->write4Pixels(temp);
//		}
//		temp++;
//		delay(500);
//	}

	timer(1);

	return 0;
}

